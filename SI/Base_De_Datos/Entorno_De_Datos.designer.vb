'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SIDB")>  _
Partial Public Class Entorno_De_DatosDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertRol(instance As Rol)
    End Sub
  Partial Private Sub UpdateRol(instance As Rol)
    End Sub
  Partial Private Sub DeleteRol(instance As Rol)
    End Sub
  Partial Private Sub InsertPregunta_Seguridad(instance As Pregunta_Seguridad)
    End Sub
  Partial Private Sub UpdatePregunta_Seguridad(instance As Pregunta_Seguridad)
    End Sub
  Partial Private Sub DeletePregunta_Seguridad(instance As Pregunta_Seguridad)
    End Sub
  Partial Private Sub InsertContrasena_Usuario(instance As Contrasena_Usuario)
    End Sub
  Partial Private Sub UpdateContrasena_Usuario(instance As Contrasena_Usuario)
    End Sub
  Partial Private Sub DeleteContrasena_Usuario(instance As Contrasena_Usuario)
    End Sub
  Partial Private Sub InsertPermisologia(instance As Permisologia)
    End Sub
  Partial Private Sub UpdatePermisologia(instance As Permisologia)
    End Sub
  Partial Private Sub DeletePermisologia(instance As Permisologia)
    End Sub
  Partial Private Sub InsertUsuario(instance As Usuario)
    End Sub
  Partial Private Sub UpdateUsuario(instance As Usuario)
    End Sub
  Partial Private Sub DeleteUsuario(instance As Usuario)
    End Sub
  Partial Private Sub InsertRol_Permisologia(instance As Rol_Permisologia)
    End Sub
  Partial Private Sub UpdateRol_Permisologia(instance As Rol_Permisologia)
    End Sub
  Partial Private Sub DeleteRol_Permisologia(instance As Rol_Permisologia)
    End Sub
  Partial Private Sub InsertCliente(instance As Cliente)
    End Sub
  Partial Private Sub UpdateCliente(instance As Cliente)
    End Sub
  Partial Private Sub DeleteCliente(instance As Cliente)
    End Sub
  Partial Private Sub InsertAlmacen(instance As Almacen)
    End Sub
  Partial Private Sub UpdateAlmacen(instance As Almacen)
    End Sub
  Partial Private Sub DeleteAlmacen(instance As Almacen)
    End Sub
  Partial Private Sub InsertProducto(instance As Producto)
    End Sub
  Partial Private Sub UpdateProducto(instance As Producto)
    End Sub
  Partial Private Sub DeleteProducto(instance As Producto)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Base_De_Datos.My.MySettings.Default.SIDBConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Rols() As System.Data.Linq.Table(Of Rol)
		Get
			Return Me.GetTable(Of Rol)
		End Get
	End Property
	
	Public ReadOnly Property Pregunta_Seguridads() As System.Data.Linq.Table(Of Pregunta_Seguridad)
		Get
			Return Me.GetTable(Of Pregunta_Seguridad)
		End Get
	End Property
	
	Public ReadOnly Property Contrasena_Usuarios() As System.Data.Linq.Table(Of Contrasena_Usuario)
		Get
			Return Me.GetTable(Of Contrasena_Usuario)
		End Get
	End Property
	
	Public ReadOnly Property Vw_Usuarios() As System.Data.Linq.Table(Of Vw_Usuario)
		Get
			Return Me.GetTable(Of Vw_Usuario)
		End Get
	End Property
	
	Public ReadOnly Property Vw_Maestro_Usuarios() As System.Data.Linq.Table(Of Vw_Maestro_Usuario)
		Get
			Return Me.GetTable(Of Vw_Maestro_Usuario)
		End Get
	End Property
	
	Public ReadOnly Property Permisologias() As System.Data.Linq.Table(Of Permisologia)
		Get
			Return Me.GetTable(Of Permisologia)
		End Get
	End Property
	
	Public ReadOnly Property Vw_Permisos() As System.Data.Linq.Table(Of Vw_Permiso)
		Get
			Return Me.GetTable(Of Vw_Permiso)
		End Get
	End Property
	
	Public ReadOnly Property Usuarios() As System.Data.Linq.Table(Of Usuario)
		Get
			Return Me.GetTable(Of Usuario)
		End Get
	End Property
	
	Public ReadOnly Property Rol_Permisologias() As System.Data.Linq.Table(Of Rol_Permisologia)
		Get
			Return Me.GetTable(Of Rol_Permisologia)
		End Get
	End Property
	
	Public ReadOnly Property Clientes() As System.Data.Linq.Table(Of Cliente)
		Get
			Return Me.GetTable(Of Cliente)
		End Get
	End Property
	
	Public ReadOnly Property Almacens() As System.Data.Linq.Table(Of Almacen)
		Get
			Return Me.GetTable(Of Almacen)
		End Get
	End Property
	
	Public ReadOnly Property Productos() As System.Data.Linq.Table(Of Producto)
		Get
			Return Me.GetTable(Of Producto)
		End Get
	End Property
	
	Public ReadOnly Property Vw_Producto_Almacens() As System.Data.Linq.Table(Of Vw_Producto_Almacen)
		Get
			Return Me.GetTable(Of Vw_Producto_Almacen)
		End Get
	End Property
	
	Public ReadOnly Property Vw_Clientes() As System.Data.Linq.Table(Of Vw_Cliente)
		Get
			Return Me.GetTable(Of Vw_Cliente)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_permisologia")>  _
	Public Function sp_permisologia(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Rol", DbType:="Int")> ByVal rol As System.Nullable(Of Integer)) As ISingleResult(Of sp_permisologiaResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), rol)
		Return CType(result.ReturnValue,ISingleResult(Of sp_permisologiaResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Rol")>  _
Partial Public Class Rol
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Pregunta_Seguridad")>  _
Partial Public Class Pregunta_Seguridad
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Contrasena_Usuario")>  _
Partial Public Class Contrasena_Usuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Id_Usuario As Integer
	
	Private _contrasena As String
	
	Private _Fecha_Agregado As Date
	
	Private _Activa As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnId_UsuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_UsuarioChanged()
    End Sub
    Partial Private Sub OncontrasenaChanging(value As String)
    End Sub
    Partial Private Sub OncontrasenaChanged()
    End Sub
    Partial Private Sub OnFecha_AgregadoChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_AgregadoChanged()
    End Sub
    Partial Private Sub OnActivaChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Usuario", DbType:="Int NOT NULL")>  _
	Public Property Id_Usuario() As Integer
		Get
			Return Me._Id_Usuario
		End Get
		Set
			If ((Me._Id_Usuario = value)  _
						= false) Then
				Me.OnId_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Usuario = value
				Me.SendPropertyChanged("Id_Usuario")
				Me.OnId_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contrasena", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property contrasena() As String
		Get
			Return Me._contrasena
		End Get
		Set
			If (String.Equals(Me._contrasena, value) = false) Then
				Me.OncontrasenaChanging(value)
				Me.SendPropertyChanging
				Me._contrasena = value
				Me.SendPropertyChanged("contrasena")
				Me.OncontrasenaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Agregado", DbType:="Date NOT NULL")>  _
	Public Property Fecha_Agregado() As Date
		Get
			Return Me._Fecha_Agregado
		End Get
		Set
			If ((Me._Fecha_Agregado = value)  _
						= false) Then
				Me.OnFecha_AgregadoChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Agregado = value
				Me.SendPropertyChanged("Fecha_Agregado")
				Me.OnFecha_AgregadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activa", DbType:="Bit NOT NULL")>  _
	Public Property Activa() As Boolean
		Get
			Return Me._Activa
		End Get
		Set
			If ((Me._Activa = value)  _
						= false) Then
				Me.OnActivaChanging(value)
				Me.SendPropertyChanging
				Me._Activa = value
				Me.SendPropertyChanged("Activa")
				Me.OnActivaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vw_Usuario")>  _
Partial Public Class Vw_Usuario
	
	Private _Nombre As String
	
	Private _Username As String
	
	Private _Activo As Boolean
	
	Private _Id_Rol As Integer
	
	Private _Description As String
	
	Private _Verify As Boolean
	
	Private _Id_Pregunta As Integer
	
	Private _Respuesta As String
	
	Private _Borrado As Boolean
	
	Private _Expr1 As String
	
	Private _contrasena As String
	
	Private _Fecha_Agregado As Date
	
	Private _Activa As Boolean
	
	Private _Id As Integer
	
	Private _Id_Usuario As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me._Nombre = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me._Username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me._Activo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Rol", DbType:="Int NOT NULL")>  _
	Public Property Id_Rol() As Integer
		Get
			Return Me._Id_Rol
		End Get
		Set
			If ((Me._Id_Rol = value)  _
						= false) Then
				Me._Id_Rol = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Verify", DbType:="Bit NOT NULL")>  _
	Public Property Verify() As Boolean
		Get
			Return Me._Verify
		End Get
		Set
			If ((Me._Verify = value)  _
						= false) Then
				Me._Verify = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Pregunta", DbType:="Int NOT NULL")>  _
	Public Property Id_Pregunta() As Integer
		Get
			Return Me._Id_Pregunta
		End Get
		Set
			If ((Me._Id_Pregunta = value)  _
						= false) Then
				Me._Id_Pregunta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Respuesta", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Respuesta() As String
		Get
			Return Me._Respuesta
		End Get
		Set
			If (String.Equals(Me._Respuesta, value) = false) Then
				Me._Respuesta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Borrado", DbType:="Bit NOT NULL")>  _
	Public Property Borrado() As Boolean
		Get
			Return Me._Borrado
		End Get
		Set
			If ((Me._Borrado = value)  _
						= false) Then
				Me._Borrado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expr1", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Expr1() As String
		Get
			Return Me._Expr1
		End Get
		Set
			If (String.Equals(Me._Expr1, value) = false) Then
				Me._Expr1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_contrasena", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property contrasena() As String
		Get
			Return Me._contrasena
		End Get
		Set
			If (String.Equals(Me._contrasena, value) = false) Then
				Me._contrasena = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Agregado", DbType:="Date NOT NULL")>  _
	Public Property Fecha_Agregado() As Date
		Get
			Return Me._Fecha_Agregado
		End Get
		Set
			If ((Me._Fecha_Agregado = value)  _
						= false) Then
				Me._Fecha_Agregado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activa", DbType:="Bit NOT NULL")>  _
	Public Property Activa() As Boolean
		Get
			Return Me._Activa
		End Get
		Set
			If ((Me._Activa = value)  _
						= false) Then
				Me._Activa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL")>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Usuario", DbType:="Int NOT NULL")>  _
	Public Property Id_Usuario() As Integer
		Get
			Return Me._Id_Usuario
		End Get
		Set
			If ((Me._Id_Usuario = value)  _
						= false) Then
				Me._Id_Usuario = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vw_Maestro_Usuario")>  _
Partial Public Class Vw_Maestro_Usuario
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Username As String
	
	Private _Id_Rol As Integer
	
	Private _Activo As Boolean
	
	Private _Description As String
	
	Private _Verify As Boolean
	
	Private _Borrado As Boolean
	
	Private _Id_Pregunta As Integer
	
	Private _Respuesta As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL")>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me._Nombre = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me._Username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Rol", DbType:="Int NOT NULL")>  _
	Public Property Id_Rol() As Integer
		Get
			Return Me._Id_Rol
		End Get
		Set
			If ((Me._Id_Rol = value)  _
						= false) Then
				Me._Id_Rol = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me._Activo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Verify", DbType:="Bit NOT NULL")>  _
	Public Property Verify() As Boolean
		Get
			Return Me._Verify
		End Get
		Set
			If ((Me._Verify = value)  _
						= false) Then
				Me._Verify = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Borrado", DbType:="Bit NOT NULL")>  _
	Public Property Borrado() As Boolean
		Get
			Return Me._Borrado
		End Get
		Set
			If ((Me._Borrado = value)  _
						= false) Then
				Me._Borrado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Pregunta", DbType:="Int NOT NULL")>  _
	Public Property Id_Pregunta() As Integer
		Get
			Return Me._Id_Pregunta
		End Get
		Set
			If ((Me._Id_Pregunta = value)  _
						= false) Then
				Me._Id_Pregunta = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Respuesta", DbType:="VarChar(100)")>  _
	Public Property Respuesta() As String
		Get
			Return Me._Respuesta
		End Get
		Set
			If (String.Equals(Me._Respuesta, value) = false) Then
				Me._Respuesta = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Permisologia")>  _
Partial Public Class Permisologia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Description As String
	
	Private _Permiso As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnPermisoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPermisoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Permiso", DbType:="Bit NOT NULL")>  _
	Public Property Permiso() As Boolean
		Get
			Return Me._Permiso
		End Get
		Set
			If ((Me._Permiso = value)  _
						= false) Then
				Me.OnPermisoChanging(value)
				Me.SendPropertyChanging
				Me._Permiso = value
				Me.SendPropertyChanged("Permiso")
				Me.OnPermisoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vw_Permiso")>  _
Partial Public Class Vw_Permiso
	
	Private _Id As Integer
	
	Private _Expr1 As Integer
	
	Private _Id_Rol As Integer
	
	Private _Description As String
	
	Private _Permiso As Boolean
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL")>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expr1", DbType:="Int NOT NULL")>  _
	Public Property Expr1() As Integer
		Get
			Return Me._Expr1
		End Get
		Set
			If ((Me._Expr1 = value)  _
						= false) Then
				Me._Expr1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Rol", DbType:="Int NOT NULL")>  _
	Public Property Id_Rol() As Integer
		Get
			Return Me._Id_Rol
		End Get
		Set
			If ((Me._Id_Rol = value)  _
						= false) Then
				Me._Id_Rol = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Permiso", DbType:="Bit NOT NULL")>  _
	Public Property Permiso() As Boolean
		Get
			Return Me._Permiso
		End Get
		Set
			If ((Me._Permiso = value)  _
						= false) Then
				Me._Permiso = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuario")>  _
Partial Public Class Usuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Username As String
	
	Private _Id_Rol As Integer
	
	Private _Activo As Boolean
	
	Private _Verify As Boolean
	
	Private _Id_Pregunta As Integer
	
	Private _Respuesta As String
	
	Private _Borrado As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnId_RolChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_RolChanged()
    End Sub
    Partial Private Sub OnActivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnActivoChanged()
    End Sub
    Partial Private Sub OnVerifyChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVerifyChanged()
    End Sub
    Partial Private Sub OnId_PreguntaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_PreguntaChanged()
    End Sub
    Partial Private Sub OnRespuestaChanging(value As String)
    End Sub
    Partial Private Sub OnRespuestaChanged()
    End Sub
    Partial Private Sub OnBorradoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBorradoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(70) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Rol", DbType:="Int NOT NULL")>  _
	Public Property Id_Rol() As Integer
		Get
			Return Me._Id_Rol
		End Get
		Set
			If ((Me._Id_Rol = value)  _
						= false) Then
				Me.OnId_RolChanging(value)
				Me.SendPropertyChanging
				Me._Id_Rol = value
				Me.SendPropertyChanged("Id_Rol")
				Me.OnId_RolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Activo", DbType:="Bit NOT NULL")>  _
	Public Property Activo() As Boolean
		Get
			Return Me._Activo
		End Get
		Set
			If ((Me._Activo = value)  _
						= false) Then
				Me.OnActivoChanging(value)
				Me.SendPropertyChanging
				Me._Activo = value
				Me.SendPropertyChanged("Activo")
				Me.OnActivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Verify", DbType:="Bit NOT NULL")>  _
	Public Property Verify() As Boolean
		Get
			Return Me._Verify
		End Get
		Set
			If ((Me._Verify = value)  _
						= false) Then
				Me.OnVerifyChanging(value)
				Me.SendPropertyChanging
				Me._Verify = value
				Me.SendPropertyChanged("Verify")
				Me.OnVerifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Pregunta", DbType:="Int NOT NULL")>  _
	Public Property Id_Pregunta() As Integer
		Get
			Return Me._Id_Pregunta
		End Get
		Set
			If ((Me._Id_Pregunta = value)  _
						= false) Then
				Me.OnId_PreguntaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Pregunta = value
				Me.SendPropertyChanged("Id_Pregunta")
				Me.OnId_PreguntaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Respuesta", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Respuesta() As String
		Get
			Return Me._Respuesta
		End Get
		Set
			If (String.Equals(Me._Respuesta, value) = false) Then
				Me.OnRespuestaChanging(value)
				Me.SendPropertyChanging
				Me._Respuesta = value
				Me.SendPropertyChanged("Respuesta")
				Me.OnRespuestaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Borrado", DbType:="Bit NOT NULL")>  _
	Public Property Borrado() As Boolean
		Get
			Return Me._Borrado
		End Get
		Set
			If ((Me._Borrado = value)  _
						= false) Then
				Me.OnBorradoChanging(value)
				Me.SendPropertyChanging
				Me._Borrado = value
				Me.SendPropertyChanged("Borrado")
				Me.OnBorradoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Rol_Permisologia")>  _
Partial Public Class Rol_Permisologia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Id_Permisologia As Integer
	
	Private _Id_Rol As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnId_PermisologiaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_PermisologiaChanged()
    End Sub
    Partial Private Sub OnId_RolChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_RolChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Permisologia", DbType:="Int NOT NULL")>  _
	Public Property Id_Permisologia() As Integer
		Get
			Return Me._Id_Permisologia
		End Get
		Set
			If ((Me._Id_Permisologia = value)  _
						= false) Then
				Me.OnId_PermisologiaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Permisologia = value
				Me.SendPropertyChanged("Id_Permisologia")
				Me.OnId_PermisologiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Rol", DbType:="Int NOT NULL")>  _
	Public Property Id_Rol() As Integer
		Get
			Return Me._Id_Rol
		End Get
		Set
			If ((Me._Id_Rol = value)  _
						= false) Then
				Me.OnId_RolChanging(value)
				Me.SendPropertyChanging
				Me._Id_Rol = value
				Me.SendPropertyChanged("Id_Rol")
				Me.OnId_RolChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cliente")>  _
Partial Public Class Cliente
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Apellido As String
	
	Private _Cedula As String
	
	Private _Tlf_Local As String
	
	Private _Tlf_Movil As String
	
	Private _Email As String
	
	Private _Direccion As String
	
	Private _Eliminado As Boolean
	
	Private _Fecha_Agregado As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnApellidoChanging(value As String)
    End Sub
    Partial Private Sub OnApellidoChanged()
    End Sub
    Partial Private Sub OnCedulaChanging(value As String)
    End Sub
    Partial Private Sub OnCedulaChanged()
    End Sub
    Partial Private Sub OnTlf_LocalChanging(value As String)
    End Sub
    Partial Private Sub OnTlf_LocalChanged()
    End Sub
    Partial Private Sub OnTlf_MovilChanging(value As String)
    End Sub
    Partial Private Sub OnTlf_MovilChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnEliminadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEliminadoChanged()
    End Sub
    Partial Private Sub OnFecha_AgregadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnFecha_AgregadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apellido", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Apellido() As String
		Get
			Return Me._Apellido
		End Get
		Set
			If (String.Equals(Me._Apellido, value) = false) Then
				Me.OnApellidoChanging(value)
				Me.SendPropertyChanging
				Me._Apellido = value
				Me.SendPropertyChanged("Apellido")
				Me.OnApellidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cedula", DbType:="VarChar(9) NOT NULL", CanBeNull:=false)>  _
	Public Property Cedula() As String
		Get
			Return Me._Cedula
		End Get
		Set
			If (String.Equals(Me._Cedula, value) = false) Then
				Me.OnCedulaChanging(value)
				Me.SendPropertyChanging
				Me._Cedula = value
				Me.SendPropertyChanged("Cedula")
				Me.OnCedulaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tlf_Local", DbType:="VarChar(15)")>  _
	Public Property Tlf_Local() As String
		Get
			Return Me._Tlf_Local
		End Get
		Set
			If (String.Equals(Me._Tlf_Local, value) = false) Then
				Me.OnTlf_LocalChanging(value)
				Me.SendPropertyChanging
				Me._Tlf_Local = value
				Me.SendPropertyChanged("Tlf_Local")
				Me.OnTlf_LocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tlf_Movil", DbType:="VarChar(15)")>  _
	Public Property Tlf_Movil() As String
		Get
			Return Me._Tlf_Movil
		End Get
		Set
			If (String.Equals(Me._Tlf_Movil, value) = false) Then
				Me.OnTlf_MovilChanging(value)
				Me.SendPropertyChanging
				Me._Tlf_Movil = value
				Me.SendPropertyChanged("Tlf_Movil")
				Me.OnTlf_MovilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eliminado", DbType:="Bit NOT NULL")>  _
	Public Property Eliminado() As Boolean
		Get
			Return Me._Eliminado
		End Get
		Set
			If ((Me._Eliminado = value)  _
						= false) Then
				Me.OnEliminadoChanging(value)
				Me.SendPropertyChanging
				Me._Eliminado = value
				Me.SendPropertyChanged("Eliminado")
				Me.OnEliminadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Agregado", DbType:="Bit NOT NULL")>  _
	Public Property Fecha_Agregado() As Boolean
		Get
			Return Me._Fecha_Agregado
		End Get
		Set
			If ((Me._Fecha_Agregado = value)  _
						= false) Then
				Me.OnFecha_AgregadoChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Agregado = value
				Me.SendPropertyChanged("Fecha_Agregado")
				Me.OnFecha_AgregadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Almacen")>  _
Partial Public Class Almacen
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Descripcion As String
	
	Private _Direccion As String
	
	Private _Eliminado As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnDireccionChanging(value As String)
    End Sub
    Partial Private Sub OnDireccionChanged()
    End Sub
    Partial Private Sub OnEliminadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEliminadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me.OnDireccionChanging(value)
				Me.SendPropertyChanging
				Me._Direccion = value
				Me.SendPropertyChanged("Direccion")
				Me.OnDireccionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eliminado", DbType:="Bit NOT NULL")>  _
	Public Property Eliminado() As Boolean
		Get
			Return Me._Eliminado
		End Get
		Set
			If ((Me._Eliminado = value)  _
						= false) Then
				Me.OnEliminadoChanging(value)
				Me.SendPropertyChanging
				Me._Eliminado = value
				Me.SendPropertyChanged("Eliminado")
				Me.OnEliminadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Producto")>  _
Partial Public Class Producto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Codigo As String
	
	Private _Nombre As String
	
	Private _Descripcion As String
	
	Private _Stock As Integer
	
	Private _StockMin As Integer
	
	Private _IdAlmacen As Integer
	
	Private _Eliminado As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnStockChanging(value As Integer)
    End Sub
    Partial Private Sub OnStockChanged()
    End Sub
    Partial Private Sub OnStockMinChanging(value As Integer)
    End Sub
    Partial Private Sub OnStockMinChanged()
    End Sub
    Partial Private Sub OnIdAlmacenChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAlmacenChanged()
    End Sub
    Partial Private Sub OnEliminadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEliminadoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Int NOT NULL")>  _
	Public Property Stock() As Integer
		Get
			Return Me._Stock
		End Get
		Set
			If ((Me._Stock = value)  _
						= false) Then
				Me.OnStockChanging(value)
				Me.SendPropertyChanging
				Me._Stock = value
				Me.SendPropertyChanged("Stock")
				Me.OnStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Int NOT NULL")>  _
	Public Property StockMin() As Integer
		Get
			Return Me._StockMin
		End Get
		Set
			If ((Me._StockMin = value)  _
						= false) Then
				Me.OnStockMinChanging(value)
				Me.SendPropertyChanging
				Me._StockMin = value
				Me.SendPropertyChanged("StockMin")
				Me.OnStockMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAlmacen", DbType:="Int NOT NULL")>  _
	Public Property IdAlmacen() As Integer
		Get
			Return Me._IdAlmacen
		End Get
		Set
			If ((Me._IdAlmacen = value)  _
						= false) Then
				Me.OnIdAlmacenChanging(value)
				Me.SendPropertyChanging
				Me._IdAlmacen = value
				Me.SendPropertyChanged("IdAlmacen")
				Me.OnIdAlmacenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eliminado", DbType:="Bit NOT NULL")>  _
	Public Property Eliminado() As Boolean
		Get
			Return Me._Eliminado
		End Get
		Set
			If ((Me._Eliminado = value)  _
						= false) Then
				Me.OnEliminadoChanging(value)
				Me.SendPropertyChanging
				Me._Eliminado = value
				Me.SendPropertyChanged("Eliminado")
				Me.OnEliminadoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vw_Producto_Almacen")>  _
Partial Public Class Vw_Producto_Almacen
	
	Private _IdAlmacen As Integer
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Descripcion As String
	
	Private _Direccion As String
	
	Private _Eliminado As Boolean
	
	Private _Expr1 As Boolean
	
	Private _StockMin As Integer
	
	Private _Stock As Integer
	
	Private _Expr2 As String
	
	Private _Expr3 As String
	
	Private _Codigo As String
	
	Private _Expr4 As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAlmacen", DbType:="Int NOT NULL")>  _
	Public Property IdAlmacen() As Integer
		Get
			Return Me._IdAlmacen
		End Get
		Set
			If ((Me._IdAlmacen = value)  _
						= false) Then
				Me._IdAlmacen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL")>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me._Nombre = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me._Descripcion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me._Direccion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eliminado", DbType:="Bit NOT NULL")>  _
	Public Property Eliminado() As Boolean
		Get
			Return Me._Eliminado
		End Get
		Set
			If ((Me._Eliminado = value)  _
						= false) Then
				Me._Eliminado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expr1", DbType:="Bit NOT NULL")>  _
	Public Property Expr1() As Boolean
		Get
			Return Me._Expr1
		End Get
		Set
			If ((Me._Expr1 = value)  _
						= false) Then
				Me._Expr1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StockMin", DbType:="Int NOT NULL")>  _
	Public Property StockMin() As Integer
		Get
			Return Me._StockMin
		End Get
		Set
			If ((Me._StockMin = value)  _
						= false) Then
				Me._StockMin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Int NOT NULL")>  _
	Public Property Stock() As Integer
		Get
			Return Me._Stock
		End Get
		Set
			If ((Me._Stock = value)  _
						= false) Then
				Me._Stock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expr2", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property Expr2() As String
		Get
			Return Me._Expr2
		End Get
		Set
			If (String.Equals(Me._Expr2, value) = false) Then
				Me._Expr2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expr3", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Expr3() As String
		Get
			Return Me._Expr3
		End Get
		Set
			If (String.Equals(Me._Expr3, value) = false) Then
				Me._Expr3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me._Codigo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expr4", DbType:="Int NOT NULL")>  _
	Public Property Expr4() As Integer
		Get
			Return Me._Expr4
		End Get
		Set
			If ((Me._Expr4 = value)  _
						= false) Then
				Me._Expr4 = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vw_Cliente")>  _
Partial Public Class Vw_Cliente
	
	Private _IdCliente As Integer
	
	Private _NombreCompleto As String
	
	Private _Cedula As String
	
	Private _Tlf_Local As String
	
	Private _Tlf_Movil As String
	
	Private _Email As String
	
	Private _Direccion As String
	
	Private _Eliminado As Boolean
	
	Private _Fecha_Agregado As Boolean
	
	Private _Nombre As String
	
	Private _Apellido As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IdCliente() As Integer
		Get
			Return Me._IdCliente
		End Get
		Set
			If ((Me._IdCliente = value)  _
						= false) Then
				Me._IdCliente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NombreCompleto", DbType:="VarChar(101) NOT NULL", CanBeNull:=false)>  _
	Public Property NombreCompleto() As String
		Get
			Return Me._NombreCompleto
		End Get
		Set
			If (String.Equals(Me._NombreCompleto, value) = false) Then
				Me._NombreCompleto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cedula", DbType:="VarChar(9) NOT NULL", CanBeNull:=false)>  _
	Public Property Cedula() As String
		Get
			Return Me._Cedula
		End Get
		Set
			If (String.Equals(Me._Cedula, value) = false) Then
				Me._Cedula = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tlf_Local", DbType:="VarChar(15)")>  _
	Public Property Tlf_Local() As String
		Get
			Return Me._Tlf_Local
		End Get
		Set
			If (String.Equals(Me._Tlf_Local, value) = false) Then
				Me._Tlf_Local = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tlf_Movil", DbType:="VarChar(15)")>  _
	Public Property Tlf_Movil() As String
		Get
			Return Me._Tlf_Movil
		End Get
		Set
			If (String.Equals(Me._Tlf_Movil, value) = false) Then
				Me._Tlf_Movil = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Direccion", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Direccion() As String
		Get
			Return Me._Direccion
		End Get
		Set
			If (String.Equals(Me._Direccion, value) = false) Then
				Me._Direccion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eliminado", DbType:="Bit NOT NULL")>  _
	Public Property Eliminado() As Boolean
		Get
			Return Me._Eliminado
		End Get
		Set
			If ((Me._Eliminado = value)  _
						= false) Then
				Me._Eliminado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Agregado", DbType:="Bit NOT NULL")>  _
	Public Property Fecha_Agregado() As Boolean
		Get
			Return Me._Fecha_Agregado
		End Get
		Set
			If ((Me._Fecha_Agregado = value)  _
						= false) Then
				Me._Fecha_Agregado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me._Nombre = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apellido", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Apellido() As String
		Get
			Return Me._Apellido
		End Get
		Set
			If (String.Equals(Me._Apellido, value) = false) Then
				Me._Apellido = value
			End If
		End Set
	End Property
End Class

Partial Public Class sp_permisologiaResult
	
	Private _Id As Integer
	
	Private _Description As String
	
	Private _allowed As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL")>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_allowed", DbType:="Bit")>  _
	Public Property allowed() As System.Nullable(Of Boolean)
		Get
			Return Me._allowed
		End Get
		Set
			If (Me._allowed.Equals(value) = false) Then
				Me._allowed = value
			End If
		End Set
	End Property
End Class
